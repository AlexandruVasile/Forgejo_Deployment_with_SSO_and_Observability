---
global:
  scrape_interval: 30s

scrape_configs:
  # scrape myself
  - job_name: self-scrape
    static_configs:
    - targets:
        - 127.0.0.1:{{ prometheus_service_port }}    

  # scrape annotated containers
  - job_name: docker
    dockerswarm_sd_configs:
      - host: unix:///var/run/docker.sock
        role: tasks
    relabel_configs:
      # Only keep containers that should be running.
      - source_labels: [__meta_dockerswarm_task_desired_state]
        regex: running # keep the container if its previous metadata label has value running
        action: keep
      # Only keep containers that have a `prometheus-job` label.
      - source_labels: [__meta_dockerswarm_service_label_prometheus_job]
        regex: .+ 
        action: keep

      # Only keep containers attached to the vcc_default network
      - source_labels: [__meta_dockerswarm_network_name]
        regex: {{ docker_network_name }}
        action: keep
      # Use the task labels that are prefixed by `prometheus-`.
      # Use the following metalabels inside prometheus queriess
      - regex: __meta_dockerswarm_service_label_prometheus_(.+)
        action: labelmap
        replacement: $1
      # Passthrough the node labels
      - regex: __meta_dockerswarm_node_address
        action: labelmap
        replacement: node_address
      - regex: __meta_dockerswarm_node_hostname
        action: labelmap
        replacement: node_hostname
      # Passthrough the stack labels
      - regex: __meta_dockerswarm_service_label_com_docker_stack_image
        action: labelmap
        replacement: image
      - regex: __meta_dockerswarm_service_name
        action: labelmap
        replacement: service_name
      # Allow to change the port with prometheus.port
      - source_labels: [__address__, __meta_dockerswarm_service_label_prometheus_port]
        separator: ';'
        target_label: __address__
        replacement: '${1}:${2}'
        regex: '([^:]+):[0-9]+;(.+)'
        action: replace
      # Ignore the virtual IP address
      - source_labels: [__meta_dockerswarm_task_port_publish_mode, __meta_dockerswarm_network_ingress]
        regex: ingress;true
        action: drop
